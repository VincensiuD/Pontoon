// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pontoon.Data;

#nullable disable

namespace Pontoon.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220212140219_vers1-update-DataSeeder")]
    partial class vers1updateDataSeeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pontoon.Data.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CardSequenceId")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardSequenceId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colour = "RED",
                            DisplayCode = "HeartA",
                            Rank = "A",
                            Suit = "Heart",
                            Value = 1
                        },
                        new
                        {
                            Id = 2,
                            Colour = "RED",
                            DisplayCode = "Heart2",
                            Rank = "2",
                            Suit = "Heart",
                            Value = 2
                        },
                        new
                        {
                            Id = 3,
                            Colour = "RED",
                            DisplayCode = "Heart3",
                            Rank = "3",
                            Suit = "Heart",
                            Value = 3
                        },
                        new
                        {
                            Id = 4,
                            Colour = "RED",
                            DisplayCode = "Heart4",
                            Rank = "4",
                            Suit = "Heart",
                            Value = 4
                        },
                        new
                        {
                            Id = 5,
                            Colour = "RED",
                            DisplayCode = "Heart5",
                            Rank = "5",
                            Suit = "Heart",
                            Value = 5
                        },
                        new
                        {
                            Id = 6,
                            Colour = "RED",
                            DisplayCode = "Heart6",
                            Rank = "6",
                            Suit = "Heart",
                            Value = 6
                        },
                        new
                        {
                            Id = 7,
                            Colour = "RED",
                            DisplayCode = "Heart7",
                            Rank = "7",
                            Suit = "Heart",
                            Value = 7
                        },
                        new
                        {
                            Id = 8,
                            Colour = "RED",
                            DisplayCode = "Heart8",
                            Rank = "8",
                            Suit = "Heart",
                            Value = 8
                        },
                        new
                        {
                            Id = 9,
                            Colour = "RED",
                            DisplayCode = "Heart9",
                            Rank = "9",
                            Suit = "Heart",
                            Value = 9
                        },
                        new
                        {
                            Id = 10,
                            Colour = "RED",
                            DisplayCode = "Heart10",
                            Rank = "10",
                            Suit = "Heart",
                            Value = 10
                        },
                        new
                        {
                            Id = 11,
                            Colour = "RED",
                            DisplayCode = "HeartJ",
                            Rank = "J",
                            Suit = "Heart",
                            Value = 10
                        },
                        new
                        {
                            Id = 12,
                            Colour = "RED",
                            DisplayCode = "HeartQ",
                            Rank = "Q",
                            Suit = "Heart",
                            Value = 10
                        },
                        new
                        {
                            Id = 13,
                            Colour = "RED",
                            DisplayCode = "HeartK",
                            Rank = "K",
                            Suit = "Heart",
                            Value = 10
                        },
                        new
                        {
                            Id = 14,
                            Colour = "BLK",
                            DisplayCode = "SpadeA",
                            Rank = "A",
                            Suit = "Spade",
                            Value = 1
                        },
                        new
                        {
                            Id = 15,
                            Colour = "BLK",
                            DisplayCode = "Spade2",
                            Rank = "2",
                            Suit = "Spade",
                            Value = 2
                        },
                        new
                        {
                            Id = 16,
                            Colour = "BLK",
                            DisplayCode = "Spade3",
                            Rank = "3",
                            Suit = "Spade",
                            Value = 3
                        },
                        new
                        {
                            Id = 17,
                            Colour = "BLK",
                            DisplayCode = "Spade4",
                            Rank = "4",
                            Suit = "Spade",
                            Value = 4
                        },
                        new
                        {
                            Id = 18,
                            Colour = "BLK",
                            DisplayCode = "Spade5",
                            Rank = "5",
                            Suit = "Spade",
                            Value = 5
                        },
                        new
                        {
                            Id = 19,
                            Colour = "BLK",
                            DisplayCode = "Spade6",
                            Rank = "6",
                            Suit = "Spade",
                            Value = 6
                        },
                        new
                        {
                            Id = 20,
                            Colour = "BLK",
                            DisplayCode = "Spade7",
                            Rank = "7",
                            Suit = "Spade",
                            Value = 7
                        },
                        new
                        {
                            Id = 21,
                            Colour = "BLK",
                            DisplayCode = "Spade8",
                            Rank = "8",
                            Suit = "Spade",
                            Value = 8
                        },
                        new
                        {
                            Id = 22,
                            Colour = "BLK",
                            DisplayCode = "Spade9",
                            Rank = "9",
                            Suit = "Spade",
                            Value = 9
                        },
                        new
                        {
                            Id = 23,
                            Colour = "BLK",
                            DisplayCode = "Spade10",
                            Rank = "10",
                            Suit = "Spade",
                            Value = 10
                        },
                        new
                        {
                            Id = 24,
                            Colour = "BLK",
                            DisplayCode = "SpadeJ",
                            Rank = "J",
                            Suit = "Spade",
                            Value = 10
                        },
                        new
                        {
                            Id = 25,
                            Colour = "BLK",
                            DisplayCode = "SpadeQ",
                            Rank = "Q",
                            Suit = "Spade",
                            Value = 10
                        },
                        new
                        {
                            Id = 26,
                            Colour = "BLK",
                            DisplayCode = "SpadeK",
                            Rank = "K",
                            Suit = "Spade",
                            Value = 10
                        },
                        new
                        {
                            Id = 27,
                            Colour = "RED",
                            DisplayCode = "DiamondA",
                            Rank = "A",
                            Suit = "Diamond",
                            Value = 1
                        },
                        new
                        {
                            Id = 28,
                            Colour = "RED",
                            DisplayCode = "Diamond2",
                            Rank = "2",
                            Suit = "Diamond",
                            Value = 2
                        },
                        new
                        {
                            Id = 29,
                            Colour = "RED",
                            DisplayCode = "Diamond3",
                            Rank = "3",
                            Suit = "Diamond",
                            Value = 3
                        },
                        new
                        {
                            Id = 30,
                            Colour = "RED",
                            DisplayCode = "Diamond4",
                            Rank = "4",
                            Suit = "Diamond",
                            Value = 4
                        },
                        new
                        {
                            Id = 31,
                            Colour = "RED",
                            DisplayCode = "Diamond5",
                            Rank = "5",
                            Suit = "Diamond",
                            Value = 5
                        },
                        new
                        {
                            Id = 32,
                            Colour = "RED",
                            DisplayCode = "Diamond6",
                            Rank = "6",
                            Suit = "Diamond",
                            Value = 6
                        },
                        new
                        {
                            Id = 33,
                            Colour = "RED",
                            DisplayCode = "Diamond7",
                            Rank = "7",
                            Suit = "Diamond",
                            Value = 7
                        },
                        new
                        {
                            Id = 34,
                            Colour = "RED",
                            DisplayCode = "Diamond8",
                            Rank = "8",
                            Suit = "Diamond",
                            Value = 8
                        },
                        new
                        {
                            Id = 35,
                            Colour = "RED",
                            DisplayCode = "Diamond9",
                            Rank = "9",
                            Suit = "Diamond",
                            Value = 9
                        },
                        new
                        {
                            Id = 36,
                            Colour = "RED",
                            DisplayCode = "Diamond10",
                            Rank = "10",
                            Suit = "Diamond",
                            Value = 10
                        },
                        new
                        {
                            Id = 37,
                            Colour = "RED",
                            DisplayCode = "DiamondJ",
                            Rank = "J",
                            Suit = "Diamond",
                            Value = 10
                        },
                        new
                        {
                            Id = 38,
                            Colour = "RED",
                            DisplayCode = "DiamondQ",
                            Rank = "Q",
                            Suit = "Diamond",
                            Value = 10
                        },
                        new
                        {
                            Id = 39,
                            Colour = "RED",
                            DisplayCode = "DiamondK",
                            Rank = "K",
                            Suit = "Diamond",
                            Value = 10
                        },
                        new
                        {
                            Id = 40,
                            Colour = "BLK",
                            DisplayCode = "ClubA",
                            Rank = "A",
                            Suit = "Club",
                            Value = 1
                        },
                        new
                        {
                            Id = 41,
                            Colour = "BLK",
                            DisplayCode = "Club2",
                            Rank = "2",
                            Suit = "Club",
                            Value = 2
                        },
                        new
                        {
                            Id = 42,
                            Colour = "BLK",
                            DisplayCode = "Club3",
                            Rank = "3",
                            Suit = "Club",
                            Value = 3
                        },
                        new
                        {
                            Id = 43,
                            Colour = "BLK",
                            DisplayCode = "Club4",
                            Rank = "4",
                            Suit = "Club",
                            Value = 4
                        },
                        new
                        {
                            Id = 44,
                            Colour = "BLK",
                            DisplayCode = "Club5",
                            Rank = "5",
                            Suit = "Club",
                            Value = 5
                        },
                        new
                        {
                            Id = 45,
                            Colour = "BLK",
                            DisplayCode = "Club6",
                            Rank = "6",
                            Suit = "Club",
                            Value = 6
                        },
                        new
                        {
                            Id = 46,
                            Colour = "BLK",
                            DisplayCode = "Club7",
                            Rank = "7",
                            Suit = "Club",
                            Value = 7
                        },
                        new
                        {
                            Id = 47,
                            Colour = "BLK",
                            DisplayCode = "Club8",
                            Rank = "8",
                            Suit = "Club",
                            Value = 8
                        },
                        new
                        {
                            Id = 48,
                            Colour = "BLK",
                            DisplayCode = "Club9",
                            Rank = "9",
                            Suit = "Club",
                            Value = 9
                        },
                        new
                        {
                            Id = 49,
                            Colour = "BLK",
                            DisplayCode = "Club10",
                            Rank = "10",
                            Suit = "Club",
                            Value = 10
                        },
                        new
                        {
                            Id = 50,
                            Colour = "BLK",
                            DisplayCode = "ClubJ",
                            Rank = "J",
                            Suit = "Club",
                            Value = 10
                        },
                        new
                        {
                            Id = 51,
                            Colour = "BLK",
                            DisplayCode = "ClubQ",
                            Rank = "Q",
                            Suit = "Club",
                            Value = 10
                        },
                        new
                        {
                            Id = 52,
                            Colour = "BLK",
                            DisplayCode = "ClubK",
                            Rank = "K",
                            Suit = "Club",
                            Value = 10
                        });
                });

            modelBuilder.Entity("Pontoon.Data.CardSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardSequences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OwnerName = "Dealer"
                        },
                        new
                        {
                            Id = 2,
                            OwnerName = "Player"
                        },
                        new
                        {
                            Id = 3,
                            OwnerName = "PlayerSplit1"
                        },
                        new
                        {
                            Id = 4,
                            OwnerName = "PlayerSplit2"
                        });
                });

            modelBuilder.Entity("Pontoon.Data.Wager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MainWager")
                        .HasColumnType("int");

                    b.Property<int>("PairsWager")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Wagers");
                });

            modelBuilder.Entity("Pontoon.Data.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pontoon.Data.Card", b =>
                {
                    b.HasOne("Pontoon.Data.CardSequence", null)
                        .WithMany("ListOfCards")
                        .HasForeignKey("CardSequenceId");
                });

            modelBuilder.Entity("Pontoon.Data.CardSequence", b =>
                {
                    b.Navigation("ListOfCards");
                });
#pragma warning restore 612, 618
        }
    }
}
